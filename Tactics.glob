DIGEST 65c2d17dd6ef47dd287da60b92f78a8a
FTactics
R601:604 Poly <> <> lib
prf 878:883 <> silly1
R905:907 Coq.Init.Datatypes <> nat ind
R958:960 Coq.Init.Logic <> :type_scope:x_'='_x not
R953:953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R955:955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R957:957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R956:956 Tactics <> o var
R954:954 Tactics <> n var
R961:961 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R963:963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R965:965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R964:964 Tactics <> p var
R962:962 Tactics <> m var
R936:938 Coq.Init.Logic <> :type_scope:x_'='_x not
R931:931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R933:933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R935:935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R934:934 Tactics <> o var
R932:932 Tactics <> n var
R939:939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R941:941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R943:943 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R942:942 Tactics <> p var
R940:940 Tactics <> n var
R917:919 Coq.Init.Logic <> :type_scope:x_'='_x not
R916:916 Tactics <> n var
R920:920 Tactics <> m var
prf 1501:1506 <> silly2
R1528:1530 Coq.Init.Datatypes <> nat ind
R1612:1614 Coq.Init.Logic <> :type_scope:x_'='_x not
R1607:1607 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1609:1609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1611:1611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1610:1610 Tactics <> o var
R1608:1608 Tactics <> n var
R1615:1615 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1617:1617 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1619:1619 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1618:1618 Tactics <> p var
R1616:1616 Tactics <> m var
R1569:1571 Coq.Init.Datatypes <> nat ind
R1589:1591 Coq.Init.Logic <> :type_scope:x_'='_x not
R1584:1584 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1586:1586 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1588:1588 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1587:1587 Tactics <> o var
R1585:1585 Tactics <> q var
R1592:1592 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1594:1594 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1596:1596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R1595:1595 Tactics <> p var
R1593:1593 Tactics <> r var
R1576:1578 Coq.Init.Logic <> :type_scope:x_'='_x not
R1575:1575 Tactics <> q var
R1579:1579 Tactics <> r var
R1540:1542 Coq.Init.Logic <> :type_scope:x_'='_x not
R1539:1539 Tactics <> n var
R1543:1543 Tactics <> m var
prf 2286:2292 <> silly2a
R2310:2312 Coq.Init.Datatypes <> nat ind
R2404:2406 Coq.Init.Logic <> :type_scope:x_'='_x not
R2401:2401 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2403:2403 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2402:2402 Tactics <> n var
R2407:2407 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2409:2409 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2408:2408 Tactics <> m var
R2359:2361 Coq.Init.Datatypes <> nat ind
R2385:2387 Coq.Init.Logic <> :type_scope:x_'='_x not
R2382:2382 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2384:2384 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2383:2383 Tactics <> q var
R2388:2388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2390:2390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R2389:2389 Tactics <> r var
R2370:2372 Coq.Init.Logic <> :type_scope:x_'='_x not
R2365:2365 Poly <> ::'('_x_','_x_')' not
R2367:2367 Poly <> ::'('_x_','_x_')' not
R2369:2369 Poly <> ::'('_x_','_x_')' not
R2366:2366 Tactics <> q var
R2368:2368 Tactics <> q var
R2373:2373 Poly <> ::'('_x_','_x_')' not
R2375:2375 Poly <> ::'('_x_','_x_')' not
R2377:2377 Poly <> ::'('_x_','_x_')' not
R2374:2374 Tactics <> r var
R2376:2376 Tactics <> r var
R2326:2328 Coq.Init.Logic <> :type_scope:x_'='_x not
R2321:2321 Poly <> ::'('_x_','_x_')' not
R2323:2323 Poly <> ::'('_x_','_x_')' not
R2325:2325 Poly <> ::'('_x_','_x_')' not
R2322:2322 Tactics <> n var
R2324:2324 Tactics <> n var
R2329:2329 Poly <> ::'('_x_','_x_')' not
R2331:2331 Poly <> ::'('_x_','_x_')' not
R2333:2333 Poly <> ::'('_x_','_x_')' not
R2330:2330 Tactics <> m var
R2332:2332 Tactics <> m var
prf 2592:2599 <> silly_ex
R2693:2695 Coq.Init.Logic <> :type_scope:x_'='_x not
R2687:2690 Basics <> oddb def
R2696:2699 Basics <> true constr
R2671:2673 Coq.Init.Logic <> :type_scope:x_'='_x not
R2664:2668 Basics <> evenb def
R2674:2677 Basics <> true constr
R2647:2649 Coq.Init.Logic <> :type_scope:x_'='_x not
R2637:2640 Basics <> oddb def
R2643:2643 Coq.Init.Datatypes <> S constr
R2645:2645 Tactics <> n var
R2650:2653 Basics <> true constr
R2626:2628 Coq.Init.Logic <> :type_scope:x_'='_x not
R2619:2623 Basics <> evenb def
R2625:2625 Tactics <> n var
R2629:2632 Basics <> true constr
prf 2984:2998 <> silly3_firsttry
R3014:3016 Coq.Init.Datatypes <> nat ind
R3072:3074 Coq.Init.Logic <> :type_scope:x_'='_x not
R3053:3059 Basics <> beq_nat def
R3062:3062 Coq.Init.Datatypes <> S constr
R3065:3065 Coq.Init.Datatypes <> S constr
R3067:3067 Tactics <> n var
R3075:3078 Basics <> true constr
R3029:3031 Coq.Init.Logic <> :type_scope:x_'='_x not
R3025:3028 Basics <> true constr
R3032:3038 Basics <> beq_nat def
R3040:3040 Tactics <> n var
prf 3298:3303 <> silly3
R3319:3321 Coq.Init.Datatypes <> nat ind
R3377:3379 Coq.Init.Logic <> :type_scope:x_'='_x not
R3358:3364 Basics <> beq_nat def
R3367:3367 Coq.Init.Datatypes <> S constr
R3370:3370 Coq.Init.Datatypes <> S constr
R3372:3372 Tactics <> n var
R3380:3383 Basics <> true constr
R3334:3336 Coq.Init.Logic <> :type_scope:x_'='_x not
R3330:3333 Basics <> true constr
R3337:3343 Basics <> beq_nat def
R3345:3345 Tactics <> n var
prf 3768:3780 <> rev_exercise1
R3799:3802 Poly <> list ind
R3804:3806 Coq.Init.Datatypes <> nat ind
R3836:3838 Coq.Init.Logic <> :type_scope:x_'='_x not
R3834:3835 Tactics <> l' var
R3839:3841 Poly <> rev def
R3843:3843 Tactics <> l var
R3816:3818 Coq.Init.Logic <> :type_scope:x_'='_x not
R3815:3815 Tactics <> l var
R3819:3821 Poly <> rev def
R3823:3824 Tactics <> l' var
R3888:3901 Poly <> rev_involutive thm
R3888:3901 Poly <> rev_involutive thm
def 4409:4424 <> trans_eq_example
R4450:4452 Coq.Init.Datatypes <> nat ind
R4510:4512 Coq.Init.Logic <> :type_scope:x_'='_x not
R4505:4505 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4507:4507 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4509:4509 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4508:4508 Tactics <> b var
R4506:4506 Tactics <> a var
R4513:4513 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4515:4515 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4517:4517 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4516:4516 Tactics <> f var
R4514:4514 Tactics <> e var
R4488:4490 Coq.Init.Logic <> :type_scope:x_'='_x not
R4483:4483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4485:4485 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4487:4487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4486:4486 Tactics <> d var
R4484:4484 Tactics <> c var
R4491:4491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4493:4493 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4495:4495 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4494:4494 Tactics <> f var
R4492:4492 Tactics <> e var
R4466:4468 Coq.Init.Logic <> :type_scope:x_'='_x not
R4461:4461 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4463:4463 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4465:4465 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4464:4464 Tactics <> b var
R4462:4462 Tactics <> a var
R4469:4469 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4471:4471 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4473:4473 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R4472:4472 Tactics <> d var
R4470:4470 Tactics <> c var
prf 4774:4781 <> trans_eq
R4810:4810 Tactics <> X var
R4835:4837 Coq.Init.Logic <> :type_scope:x_'='_x not
R4834:4834 Tactics <> n var
R4838:4838 Tactics <> o var
R4826:4828 Coq.Init.Logic <> :type_scope:x_'='_x not
R4825:4825 Tactics <> m var
R4829:4829 Tactics <> o var
R4817:4819 Coq.Init.Logic <> :type_scope:x_'='_x not
R4816:4816 Tactics <> n var
R4820:4820 Tactics <> m var
def 5093:5109 <> trans_eq_example'
R5135:5137 Coq.Init.Datatypes <> nat ind
R5195:5197 Coq.Init.Logic <> :type_scope:x_'='_x not
R5190:5190 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5192:5192 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5194:5194 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5193:5193 Tactics <> b var
R5191:5191 Tactics <> a var
R5198:5198 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5200:5200 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5202:5202 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5201:5201 Tactics <> f var
R5199:5199 Tactics <> e var
R5173:5175 Coq.Init.Logic <> :type_scope:x_'='_x not
R5168:5168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5170:5170 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5172:5172 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5171:5171 Tactics <> d var
R5169:5169 Tactics <> c var
R5176:5176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5178:5178 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5180:5180 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5179:5179 Tactics <> f var
R5177:5177 Tactics <> e var
R5151:5153 Coq.Init.Logic <> :type_scope:x_'='_x not
R5146:5146 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5148:5148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5150:5150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5149:5149 Tactics <> b var
R5147:5147 Tactics <> a var
R5154:5154 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5156:5156 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5158:5158 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5157:5157 Tactics <> d var
R5155:5155 Tactics <> c var
R5673:5673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5675:5675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5677:5677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5655:5662 Tactics <> trans_eq thm
R5673:5673 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5675:5675 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5677:5677 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R5655:5662 Tactics <> trans_eq thm
def 6007:6023 <> trans_eq_exercise
R6045:6047 Coq.Init.Datatypes <> nat ind
R6101:6101 Coq.Init.Logic <> :type_scope:x_'='_x not
R6107:6111 Coq.Init.Logic <> :type_scope:x_'='_x not
R6122:6122 Coq.Init.Logic <> :type_scope:x_'='_x not
R6103:6105 Basics <> :nat_scope:x_'+'_x not
R6102:6102 Tactics <> n var
R6106:6106 Tactics <> p var
R6112:6119 Basics <> minustwo def
R6121:6121 Tactics <> o var
R6081:6081 Coq.Init.Logic <> :type_scope:x_'='_x not
R6087:6090 Coq.Init.Logic <> :type_scope:x_'='_x not
R6083:6085 Basics <> :nat_scope:x_'+'_x not
R6082:6082 Tactics <> n var
R6086:6086 Tactics <> p var
R6091:6091 Tactics <> m var
R6057:6060 Coq.Init.Logic <> :type_scope:x_'='_x not
R6071:6071 Coq.Init.Logic <> :type_scope:x_'='_x not
R6056:6056 Tactics <> m var
R6061:6068 Basics <> minustwo def
R6070:6070 Tactics <> o var
R6148:6155 Tactics <> trans_eq thm
R6148:6155 Tactics <> trans_eq thm
prf 7686:7696 <> S_injective
R7714:7716 Coq.Init.Datatypes <> nat ind
R7738:7740 Coq.Init.Logic <> :type_scope:x_'='_x not
R7737:7737 Tactics <> n var
R7741:7741 Tactics <> m var
R7725:7727 Coq.Init.Logic <> :type_scope:x_'='_x not
R7722:7722 Coq.Init.Datatypes <> S constr
R7724:7724 Tactics <> n var
R7728:7728 Coq.Init.Datatypes <> S constr
R7730:7730 Tactics <> m var
prf 8228:8240 <> inversion_ex1
R8260:8262 Coq.Init.Datatypes <> nat ind
R8292:8294 Coq.Init.Logic <> :type_scope:x_'='_x not
R8289:8289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8291:8291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8290:8290 Tactics <> n var
R8295:8295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8297:8297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8296:8296 Tactics <> m var
R8274:8276 Coq.Init.Logic <> :type_scope:x_'='_x not
R8268:8268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8270:8271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8273:8273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8272:8272 Tactics <> m var
R8269:8269 Tactics <> n var
R8277:8277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8279:8280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8282:8282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8281:8281 Tactics <> o var
R8278:8278 Tactics <> o var
prf 8466:8478 <> inversion_ex2
R8496:8498 Coq.Init.Datatypes <> nat ind
R8520:8522 Coq.Init.Logic <> :type_scope:x_'='_x not
R8519:8519 Tactics <> n var
R8523:8523 Tactics <> m var
R8507:8509 Coq.Init.Logic <> :type_scope:x_'='_x not
R8504:8504 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8506:8506 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8505:8505 Tactics <> n var
R8510:8510 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8512:8512 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R8511:8511 Tactics <> m var
def 8645:8657 <> inversion_ex3
R8688:8688 Tactics <> X var
R8698:8701 Poly <> list ind
R8703:8703 Tactics <> X var
R8757:8759 Coq.Init.Logic <> :type_scope:x_'='_x not
R8756:8756 Tactics <> x var
R8760:8760 Tactics <> y var
R8741:8743 Coq.Init.Logic <> :type_scope:x_'='_x not
R8736:8739 Poly <> ::x_'::'_x not
R8735:8735 Tactics <> y var
R8740:8740 Tactics <> l var
R8745:8748 Poly <> ::x_'::'_x not
R8744:8744 Tactics <> x var
R8749:8749 Tactics <> j var
R8720:8722 Coq.Init.Logic <> :type_scope:x_'='_x not
R8710:8713 Poly <> ::x_'::'_x not
R8709:8709 Tactics <> x var
R8715:8718 Poly <> ::x_'::'_x not
R8714:8714 Tactics <> y var
R8719:8719 Tactics <> l var
R8724:8727 Poly <> ::x_'::'_x not
R8723:8723 Tactics <> z var
R8728:8728 Tactics <> j var
prf 9114:9120 <> f_equal
R9153:9153 Tactics <> B var
R9148:9148 Tactics <> A var
R9162:9162 Tactics <> A var
R9180:9182 Coq.Init.Logic <> :type_scope:x_'='_x not
R9177:9177 Tactics <> f var
R9179:9179 Tactics <> x var
R9183:9183 Tactics <> f var
R9185:9185 Tactics <> y var
R9169:9171 Coq.Init.Logic <> :type_scope:x_'='_x not
R9168:9168 Tactics <> x var
R9172:9172 Tactics <> y var
prf 9477:9487 <> beq_nat_0_l
R9527:9529 Coq.Init.Logic <> :type_scope:x_'='_x not
R9526:9526 Tactics <> n var
R9515:9517 Coq.Init.Logic <> :type_scope:x_'='_x not
R9504:9510 Basics <> beq_nat def
R9514:9514 Tactics <> n var
R9518:9521 Basics <> true constr
prf 10449:10461 <> inversion_ex4
R10477:10479 Coq.Init.Datatypes <> nat ind
R10503:10505 Coq.Init.Logic <> :type_scope:x_'='_x not
R10499:10501 Basics <> :nat_scope:x_'+'_x not
R10488:10490 Coq.Init.Logic <> :type_scope:x_'='_x not
R10485:10485 Coq.Init.Datatypes <> S constr
R10487:10487 Tactics <> n var
R10491:10491 Coq.Init.Datatypes <> O constr
prf 10567:10579 <> inversion_ex5
R10597:10599 Coq.Init.Datatypes <> nat ind
R10626:10628 Coq.Init.Logic <> :type_scope:x_'='_x not
R10623:10623 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10625:10625 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10624:10624 Tactics <> n var
R10629:10629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10631:10631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R10630:10630 Tactics <> m var
R10610:10612 Coq.Init.Logic <> :type_scope:x_'='_x not
R10605:10609 Basics <> false constr
R10613:10616 Basics <> true constr
def 11110:11122 <> inversion_ex6
R11179:11179 Tactics <> X var
R11189:11192 Poly <> list ind
R11194:11194 Tactics <> X var
R11244:11246 Coq.Init.Logic <> :type_scope:x_'='_x not
R11243:11243 Tactics <> x var
R11247:11247 Tactics <> z var
R11228:11230 Coq.Init.Logic <> :type_scope:x_'='_x not
R11223:11226 Poly <> ::x_'::'_x not
R11222:11222 Tactics <> y var
R11227:11227 Tactics <> l var
R11232:11235 Poly <> ::x_'::'_x not
R11231:11231 Tactics <> z var
R11236:11236 Tactics <> j var
R11211:11213 Coq.Init.Logic <> :type_scope:x_'='_x not
R11201:11204 Poly <> ::x_'::'_x not
R11200:11200 Tactics <> x var
R11206:11209 Poly <> ::x_'::'_x not
R11205:11205 Tactics <> y var
R11210:11210 Tactics <> l var
R11214:11215 Poly <> ::'['_']' not
prf 12534:12538 <> S_inj
R12556:12558 Coq.Init.Datatypes <> nat ind
R12566:12569 Basics <> bool ind
R12622:12624 Coq.Init.Logic <> :type_scope:x_'='_x not
R12611:12617 Basics <> beq_nat def
R12621:12621 Tactics <> m var
R12619:12619 Tactics <> n var
R12625:12625 Tactics <> b var
R12597:12599 Coq.Init.Logic <> :type_scope:x_'='_x not
R12578:12584 Basics <> beq_nat def
R12593:12593 Coq.Init.Datatypes <> S constr
R12595:12595 Tactics <> m var
R12587:12587 Coq.Init.Datatypes <> S constr
R12589:12589 Tactics <> n var
R12600:12600 Tactics <> b var
prf 13463:13469 <> silly3'
R13485:13487 Coq.Init.Datatypes <> nat ind
R13578:13580 Coq.Init.Logic <> :type_scope:x_'='_x not
R13574:13577 Basics <> true constr
R13581:13587 Basics <> beq_nat def
R13590:13590 Coq.Init.Datatypes <> S constr
R13593:13593 Coq.Init.Datatypes <> S constr
R13595:13595 Tactics <> n var
R13553:13555 Coq.Init.Logic <> :type_scope:x_'='_x not
R13549:13552 Basics <> true constr
R13556:13562 Basics <> beq_nat def
R13564:13564 Tactics <> n var
R13535:13537 Coq.Init.Logic <> :type_scope:x_'='_x not
R13516:13522 Basics <> beq_nat def
R13525:13525 Coq.Init.Datatypes <> S constr
R13528:13528 Coq.Init.Datatypes <> S constr
R13530:13530 Tactics <> n var
R13538:13541 Basics <> true constr
R13505:13507 Coq.Init.Logic <> :type_scope:x_'='_x not
R13494:13500 Basics <> beq_nat def
R13502:13502 Tactics <> n var
R13508:13511 Basics <> true constr
prf 14477:14494 <> plus_n_n_injective
R14538:14540 Coq.Init.Logic <> :type_scope:x_'='_x not
R14537:14537 Tactics <> n var
R14541:14541 Tactics <> m var
R14520:14522 Coq.Init.Logic <> :type_scope:x_'='_x not
R14516:14518 Basics <> :nat_scope:x_'+'_x not
R14515:14515 Tactics <> n var
R14519:14519 Tactics <> n var
R14524:14526 Basics <> :nat_scope:x_'+'_x not
R14523:14523 Tactics <> m var
R14527:14527 Tactics <> m var
R14703:14709 Tactics <> f_equal thm
R14703:14709 Tactics <> f_equal thm
R14748:14756 Induction <> plus_n_Sm thm
R14748:14756 Induction <> plus_n_Sm thm
R14792:14800 Induction <> plus_n_Sm thm
R14792:14800 Induction <> plus_n_Sm thm
prf 15762:15784 <> double_injective_FAILED
R15834:15836 Coq.Init.Logic <> :type_scope:x_'='_x not
R15833:15833 Tactics <> n var
R15837:15837 Tactics <> m var
R15813:15815 Coq.Init.Logic <> :type_scope:x_'='_x not
R15805:15810 Induction <> double def
R15812:15812 Tactics <> n var
R15816:15821 Induction <> double def
R15823:15823 Tactics <> m var
R16118:16124 Tactics <> f_equal thm
R16118:16124 Tactics <> f_equal thm
prf 18370:18385 <> double_injective
R18435:18437 Coq.Init.Logic <> :type_scope:x_'='_x not
R18434:18434 Tactics <> n var
R18438:18438 Tactics <> m var
R18414:18416 Coq.Init.Logic <> :type_scope:x_'='_x not
R18406:18411 Induction <> double def
R18413:18413 Tactics <> n var
R18417:18422 Induction <> double def
R18424:18424 Tactics <> m var
R19311:19317 Tactics <> f_equal thm
R19311:19317 Tactics <> f_equal thm
prf 20212:20223 <> beq_nat_true
R20266:20268 Coq.Init.Logic <> :type_scope:x_'='_x not
R20265:20265 Tactics <> n var
R20269:20269 Tactics <> m var
R20254:20256 Coq.Init.Logic <> :type_scope:x_'='_x not
R20243:20249 Basics <> beq_nat def
R20253:20253 Tactics <> m var
R20251:20251 Tactics <> n var
R20257:20260 Basics <> true constr
R20440:20446 Tactics <> f_equal thm
R20440:20446 Tactics <> f_equal thm
prf 21011:21039 <> double_injective_take2_FAILED
R21089:21091 Coq.Init.Logic <> :type_scope:x_'='_x not
R21088:21088 Tactics <> n var
R21092:21092 Tactics <> m var
R21068:21070 Coq.Init.Logic <> :type_scope:x_'='_x not
R21060:21065 Induction <> double def
R21067:21067 Tactics <> n var
R21071:21076 Induction <> double def
R21078:21078 Tactics <> m var
R21373:21379 Tactics <> f_equal thm
R21373:21379 Tactics <> f_equal thm
prf 22315:22336 <> double_injective_take2
R22386:22388 Coq.Init.Logic <> :type_scope:x_'='_x not
R22385:22385 Tactics <> n var
R22389:22389 Tactics <> m var
R22365:22367 Coq.Init.Logic <> :type_scope:x_'='_x not
R22357:22362 Induction <> double def
R22364:22364 Tactics <> n var
R22368:22373 Induction <> double def
R22375:22375 Tactics <> m var
R22852:22858 Tactics <> f_equal thm
R22852:22858 Tactics <> f_equal thm
prf 25062:25072 <> beq_id_true
R25112:25114 Coq.Init.Logic <> :type_scope:x_'='_x not
R25111:25111 Tactics <> x var
R25115:25115 Tactics <> y var
R25100:25102 Coq.Init.Logic <> :type_scope:x_'='_x not
R25090:25095 Lists <> beq_id def
R25099:25099 Tactics <> y var
R25097:25097 Tactics <> x var
R25103:25106 Basics <> true constr
R25176:25178 Coq.Init.Logic <> :type_scope:x_'='_x not
R25176:25178 Coq.Init.Logic <> :type_scope:x_'='_x not
R25191:25202 Tactics <> beq_nat_true thm
R25191:25202 Tactics <> beq_nat_true thm
prf 25360:25379 <> nth_error_after_last
R25394:25396 Coq.Init.Datatypes <> nat ind
R25415:25418 Poly <> list ind
R25420:25420 Tactics <> X var
R25463:25465 Coq.Init.Logic <> :type_scope:x_'='_x not
R25450:25458 Poly <> nth_error def
R25462:25462 Tactics <> n var
R25460:25460 Tactics <> l var
R25466:25469 Poly <> None constr
R25437:25439 Coq.Init.Logic <> :type_scope:x_'='_x not
R25429:25434 Poly <> length def
R25436:25436 Tactics <> l var
R25440:25440 Tactics <> n var
prf 25782:25796 <> app_length_cons
R25827:25830 Poly <> list ind
R25832:25832 Tactics <> X var
R25874:25874 Tactics <> X var
R25882:25884 Coq.Init.Datatypes <> nat ind
R25951:25953 Coq.Init.Logic <> :type_scope:x_'='_x not
R25930:25930 Coq.Init.Datatypes <> S constr
R25933:25938 Poly <> length def
R25943:25946 Poly <> ::x_'++'_x not
R25941:25942 Tactics <> l1 var
R25947:25948 Tactics <> l2 var
R25954:25954 Tactics <> n var
R25917:25919 Coq.Init.Logic <> :type_scope:x_'='_x not
R25893:25898 Poly <> length def
R25903:25907 Poly <> ::x_'++'_x not
R25915:25915 Poly <> ::x_'++'_x not
R25901:25902 Tactics <> l1 var
R25909:25912 Poly <> ::x_'::'_x not
R25908:25908 Tactics <> x var
R25913:25914 Tactics <> l2 var
R25920:25920 Tactics <> n var
prf 26197:26212 <> app_length_twice
R26235:26237 Coq.Init.Datatypes <> nat ind
R26243:26246 Poly <> list ind
R26248:26248 Tactics <> X var
R26293:26295 Coq.Init.Logic <> :type_scope:x_'='_x not
R26278:26283 Poly <> length def
R26287:26290 Poly <> ::x_'++'_x not
R26286:26286 Tactics <> l var
R26291:26291 Tactics <> l var
R26297:26299 Basics <> :nat_scope:x_'+'_x not
R26296:26296 Tactics <> n var
R26300:26300 Tactics <> n var
R26265:26267 Coq.Init.Logic <> :type_scope:x_'='_x not
R26257:26262 Poly <> length def
R26264:26264 Tactics <> l var
R26268:26268 Tactics <> n var
prf 26490:26505 <> double_induction
R26527:26529 Coq.Init.Datatypes <> nat ind
R26520:26522 Coq.Init.Datatypes <> nat ind
R26680:26680 Tactics <> P var
R26684:26684 Tactics <> n var
R26682:26682 Tactics <> m var
R26648:26648 Tactics <> P var
R26657:26657 Coq.Init.Datatypes <> S constr
R26659:26659 Tactics <> n var
R26651:26651 Coq.Init.Datatypes <> S constr
R26653:26653 Tactics <> m var
R26639:26639 Tactics <> P var
R26643:26643 Tactics <> n var
R26641:26641 Tactics <> m var
R26610:26610 Tactics <> P var
R26615:26615 Coq.Init.Datatypes <> S constr
R26617:26617 Tactics <> n var
R26601:26601 Tactics <> P var
R26605:26605 Tactics <> n var
R26574:26574 Tactics <> P var
R26577:26577 Coq.Init.Datatypes <> S constr
R26579:26579 Tactics <> m var
R26565:26565 Tactics <> P var
R26567:26567 Tactics <> m var
R26543:26543 Tactics <> P var
def 27010:27015 <> square
R27023:27025 Basics <> :nat_scope:x_'*'_x not
R27022:27022 Tactics <> n var
R27026:27026 Tactics <> n var
prf 27097:27107 <> square_mult
R27137:27139 Coq.Init.Logic <> :type_scope:x_'='_x not
R27123:27128 Tactics <> square def
R27132:27134 Basics <> :nat_scope:x_'*'_x not
R27131:27131 Tactics <> n var
R27135:27135 Tactics <> m var
R27148:27150 Basics <> :nat_scope:x_'*'_x not
R27140:27145 Tactics <> square def
R27147:27147 Tactics <> n var
R27151:27156 Tactics <> square def
R27158:27158 Tactics <> m var
R27475:27480 Tactics <> square def
R27807:27816 Induction <> mult_assoc prfax
R27807:27816 Induction <> mult_assoc prfax
R27842:27844 Coq.Init.Logic <> :type_scope:x_'='_x not
R27838:27840 Basics <> :nat_scope:x_'*'_x not
R27834:27836 Basics <> :nat_scope:x_'*'_x not
R27850:27852 Basics <> :nat_scope:x_'*'_x not
R27846:27848 Basics <> :nat_scope:x_'*'_x not
R27842:27844 Coq.Init.Logic <> :type_scope:x_'='_x not
R27838:27840 Basics <> :nat_scope:x_'*'_x not
R27834:27836 Basics <> :nat_scope:x_'*'_x not
R27850:27852 Basics <> :nat_scope:x_'*'_x not
R27846:27848 Basics <> :nat_scope:x_'*'_x not
R27869:27877 Induction <> mult_comm thm
R27869:27877 Induction <> mult_comm thm
R27886:27895 Induction <> mult_assoc prfax
R27886:27895 Induction <> mult_assoc prfax
R27921:27930 Induction <> mult_assoc prfax
R27921:27930 Induction <> mult_assoc prfax
def 28314:28316 <> foo
R28322:28324 Coq.Init.Datatypes <> nat ind
prf 28537:28548 <> silly_fact_1
R28571:28573 Coq.Init.Logic <> :type_scope:x_'='_x not
R28567:28569 Basics <> :nat_scope:x_'+'_x not
R28562:28564 Tactics <> foo def
R28566:28566 Tactics <> m var
R28585:28587 Basics <> :nat_scope:x_'+'_x not
R28574:28576 Tactics <> foo def
R28580:28582 Basics <> :nat_scope:x_'+'_x not
R28579:28579 Tactics <> m var
def 28818:28820 <> bar
R28835:28835 Tactics <> x var
R28846:28846 Coq.Init.Datatypes <> O constr
R28857:28857 Coq.Init.Datatypes <> S constr
prf 28931:28949 <> silly_fact_2_FAILED
R28972:28974 Coq.Init.Logic <> :type_scope:x_'='_x not
R28968:28970 Basics <> :nat_scope:x_'+'_x not
R28963:28965 Tactics <> bar def
R28967:28967 Tactics <> m var
R28986:28988 Basics <> :nat_scope:x_'+'_x not
R28975:28977 Tactics <> bar def
R28981:28983 Basics <> :nat_scope:x_'+'_x not
R28980:28980 Tactics <> m var
prf 29977:29988 <> silly_fact_2
R30011:30013 Coq.Init.Logic <> :type_scope:x_'='_x not
R30007:30009 Basics <> :nat_scope:x_'+'_x not
R30002:30004 Tactics <> bar def
R30006:30006 Tactics <> m var
R30025:30027 Basics <> :nat_scope:x_'+'_x not
R30014:30016 Tactics <> bar def
R30020:30022 Basics <> :nat_scope:x_'+'_x not
R30019:30019 Tactics <> m var
prf 30378:30390 <> silly_fact_2'
R30413:30415 Coq.Init.Logic <> :type_scope:x_'='_x not
R30409:30411 Basics <> :nat_scope:x_'+'_x not
R30404:30406 Tactics <> bar def
R30408:30408 Tactics <> m var
R30427:30429 Basics <> :nat_scope:x_'+'_x not
R30416:30418 Tactics <> bar def
R30422:30424 Basics <> :nat_scope:x_'+'_x not
R30421:30421 Tactics <> m var
R30461:30463 Tactics <> bar def
def 31107:31114 <> sillyfun
R31121:31123 Coq.Init.Datatypes <> nat ind
R31128:31131 Basics <> bool ind
R31141:31147 Basics <> beq_nat def
R31149:31149 Tactics <> n var
R31174:31180 Basics <> beq_nat def
R31182:31182 Tactics <> n var
R31204:31208 Basics <> false constr
R31191:31195 Basics <> false constr
R31158:31162 Basics <> false constr
prf 31220:31233 <> sillyfun_false
R31249:31251 Coq.Init.Datatypes <> nat ind
R31267:31269 Coq.Init.Logic <> :type_scope:x_'='_x not
R31257:31264 Tactics <> sillyfun def
R31266:31266 Tactics <> n var
R31270:31274 Basics <> false constr
R31303:31310 Tactics <> sillyfun def
R31325:31331 Basics <> beq_nat def
R31325:31331 Basics <> beq_nat def
R31425:31431 Basics <> beq_nat def
R31425:31431 Basics <> beq_nat def
prf 32230:32242 <> combine_split
R32262:32265 Poly <> list ind
R32269:32271 Poly <> :type_scope:x_'*'_x not
R32268:32268 Tactics <> X var
R32272:32272 Tactics <> Y var
R32322:32324 Coq.Init.Logic <> :type_scope:x_'='_x not
R32309:32315 Poly <> combine def
R32320:32321 Tactics <> l2 var
R32317:32318 Tactics <> l1 var
R32325:32325 Tactics <> l var
R32292:32294 Coq.Init.Logic <> :type_scope:x_'='_x not
R32285:32289 Poly <> split def
R32291:32291 Tactics <> l var
R32295:32295 Poly <> ::'('_x_','_x_')' not
R32298:32299 Poly <> ::'('_x_','_x_')' not
R32302:32302 Poly <> ::'('_x_','_x_')' not
R32296:32297 Tactics <> l1 var
R32300:32301 Tactics <> l2 var
def 32612:32620 <> sillyfun1
R32627:32629 Coq.Init.Datatypes <> nat ind
R32634:32637 Basics <> bool ind
R32647:32653 Basics <> beq_nat def
R32655:32655 Tactics <> n var
R32679:32685 Basics <> beq_nat def
R32687:32687 Tactics <> n var
R32708:32712 Basics <> false constr
R32696:32699 Basics <> true constr
R32664:32667 Basics <> true constr
prf 32971:32990 <> sillyfun1_odd_FAILED
R33006:33008 Coq.Init.Datatypes <> nat ind
R33050:33052 Coq.Init.Logic <> :type_scope:x_'='_x not
R33044:33047 Basics <> oddb def
R33049:33049 Tactics <> n var
R33053:33056 Basics <> true constr
R33028:33030 Coq.Init.Logic <> :type_scope:x_'='_x not
R33017:33025 Tactics <> sillyfun1 def
R33027:33027 Tactics <> n var
R33031:33034 Basics <> true constr
R33088:33096 Tactics <> sillyfun1 def
R33117:33123 Basics <> beq_nat def
R33117:33123 Basics <> beq_nat def
prf 33973:33985 <> sillyfun1_odd
R34001:34003 Coq.Init.Datatypes <> nat ind
R34045:34047 Coq.Init.Logic <> :type_scope:x_'='_x not
R34039:34042 Basics <> oddb def
R34044:34044 Tactics <> n var
R34048:34051 Basics <> true constr
R34023:34025 Coq.Init.Logic <> :type_scope:x_'='_x not
R34012:34020 Tactics <> sillyfun1 def
R34022:34022 Tactics <> n var
R34026:34029 Basics <> true constr
R34083:34091 Tactics <> sillyfun1 def
R34112:34118 Basics <> beq_nat def
R34112:34118 Basics <> beq_nat def
R34367:34378 Tactics <> beq_nat_true thm
R34367:34378 Tactics <> beq_nat_true thm
R34665:34671 Basics <> beq_nat def
R34665:34671 Basics <> beq_nat def
R34731:34742 Tactics <> beq_nat_true thm
R34731:34742 Tactics <> beq_nat_true thm
prf 34906:34927 <> bool_fn_applied_thrice
R34953:34956 Basics <> bool ind
R34945:34948 Basics <> bool ind
R34964:34967 Basics <> bool ind
R34984:34986 Coq.Init.Logic <> :type_scope:x_'='_x not
R34973:34973 Tactics <> f var
R34976:34976 Tactics <> f var
R34979:34979 Tactics <> f var
R34981:34981 Tactics <> b var
R34987:34987 Tactics <> f var
R34989:34989 Tactics <> b var
prf 37279:37289 <> beq_nat_sym
R37307:37309 Coq.Init.Datatypes <> nat ind
R37326:37328 Coq.Init.Logic <> :type_scope:x_'='_x not
R37315:37321 Basics <> beq_nat def
R37325:37325 Tactics <> m var
R37323:37323 Tactics <> n var
R37329:37335 Basics <> beq_nat def
R37339:37339 Tactics <> n var
R37337:37337 Tactics <> m var
prf 37726:37738 <> beq_nat_trans
R37817:37819 Coq.Init.Logic <> :type_scope:x_'='_x not
R37806:37812 Basics <> beq_nat def
R37816:37816 Tactics <> p var
R37814:37814 Tactics <> n var
R37820:37823 Basics <> true constr
R37793:37795 Coq.Init.Logic <> :type_scope:x_'='_x not
R37782:37788 Basics <> beq_nat def
R37792:37792 Tactics <> p var
R37790:37790 Tactics <> m var
R37796:37799 Basics <> true constr
R37769:37771 Coq.Init.Logic <> :type_scope:x_'='_x not
R37758:37764 Basics <> beq_nat def
R37768:37768 Tactics <> m var
R37766:37766 Tactics <> n var
R37772:37775 Basics <> true constr
def 38570:38592 <> split_combine_statement
prf 38679:38691 <> split_combine
R38695:38717 Tactics <> split_combine_statement prfax
prf 38936:38950 <> filter_exercise
R38985:38988 Basics <> bool ind
R38980:38980 Tactics <> X var
R39025:39025 Tactics <> X var
R39036:39039 Poly <> list ind
R39041:39041 Tactics <> X var
R39088:39090 Coq.Init.Logic <> :type_scope:x_'='_x not
R39082:39085 Tactics <> test var
R39087:39087 Tactics <> x var
R39091:39094 Basics <> true constr
R39063:39065 Coq.Init.Logic <> :type_scope:x_'='_x not
R39050:39055 Poly <> filter def
R39062:39062 Tactics <> l var
R39057:39060 Tactics <> test var
R39067:39070 Poly <> ::x_'::'_x not
R39066:39066 Tactics <> x var
R39071:39072 Tactics <> lf var
