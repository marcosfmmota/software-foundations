DIGEST 9a2a0ba24cacca73805983f1509762c4
FPoly
R180:184 Lists <> <> lib
ind 1062:1069 <> boollist
constr 1085:1092 <> bool_nil
constr 1109:1117 <> bool_cons
R1096:1103 Poly <> boollist ind
R1141:1148 Poly <> boollist ind
R1129:1136 Poly <> boollist ind
R1121:1124 Basics <> bool ind
ind 1623:1626 <> list
constr 1651:1653 <> nil
constr 1668:1671 <> cons
R1657:1660 Poly <> list ind
R1690:1693 Poly <> list ind
R1680:1683 Poly <> list ind
R2883:2885 Poly <> nil constr
R2935:2938 Poly <> cons constr
R3720:3723 Poly <> cons constr
R3732:3735 Poly <> cons constr
R3744:3746 Poly <> nil constr
R3748:3750 Coq.Init.Datatypes <> nat ind
R3737:3739 Coq.Init.Datatypes <> nat ind
R3725:3727 Coq.Init.Datatypes <> nat ind
def 4103:4108 <> repeat
R4126:4126 Poly <> X var
R4138:4140 Coq.Init.Datatypes <> nat ind
R4145:4148 Poly <> list ind
R4150:4150 Poly <> X var
R4163:4167 Poly <> count var
R4183:4185 Poly <> nil constr
R4187:4187 Poly <> X var
R4193:4193 Coq.Init.Datatypes <> S constr
R4205:4208 Poly <> cons constr
R4215:4220 Poly <> repeat def
R4224:4224 Poly <> x var
R4222:4222 Poly <> X var
R4212:4212 Poly <> x var
R4210:4210 Poly <> X var
def 4370:4381 <> test_repeat1
R4401:4403 Coq.Init.Logic <> :type_scope:x_'='_x not
R4387:4392 Poly <> repeat def
R4394:4396 Coq.Init.Datatypes <> nat ind
R4404:4407 Poly <> cons constr
R4416:4419 Poly <> cons constr
R4428:4430 Poly <> nil constr
R4432:4434 Coq.Init.Datatypes <> nat ind
R4421:4423 Coq.Init.Datatypes <> nat ind
R4409:4411 Coq.Init.Datatypes <> nat ind
def 4594:4605 <> test_repeat2
R4630:4632 Coq.Init.Logic <> :type_scope:x_'='_x not
R4611:4616 Poly <> repeat def
R4623:4627 Basics <> false constr
R4618:4621 Basics <> bool ind
R4633:4636 Poly <> cons constr
R4650:4652 Poly <> nil constr
R4654:4657 Basics <> bool ind
R4643:4647 Basics <> false constr
R4638:4641 Basics <> bool ind
mod 4695:4707 <> MumbleGrumble
ind 4831:4836 MumbleGrumble mumble
constr 4852:4852 MumbleGrumble a
constr 4867:4867 MumbleGrumble b
constr 4899:4899 MumbleGrumble c
R4856:4861 Poly <> mumble ind
R4888:4893 Poly <> mumble ind
R4881:4883 Coq.Init.Datatypes <> nat ind
R4871:4876 Poly <> mumble ind
R4903:4908 Poly <> mumble ind
ind 4922:4928 MumbleGrumble grumble
constr 4953:4953 MumbleGrumble d
constr 4981:4981 MumbleGrumble e
R4967:4973 Poly <> grumble ind
R4957:4962 Poly MumbleGrumble mumble ind
R4990:4996 Poly <> grumble ind
R5316:5316 Poly MumbleGrumble d constr
R5326:5326 Poly MumbleGrumble b constr
R5328:5328 Poly MumbleGrumble a constr
R5318:5323 Poly MumbleGrumble mumble ind
R5344:5344 Poly MumbleGrumble d constr
R5352:5352 Poly MumbleGrumble b constr
R5354:5354 Poly MumbleGrumble a constr
R5346:5349 Basics <> bool ind
R5370:5370 Poly MumbleGrumble e constr
R5377:5380 Basics <> true constr
R5372:5375 Basics <> bool ind
R5393:5393 Poly MumbleGrumble e constr
R5402:5402 Poly MumbleGrumble b constr
R5404:5404 Poly MumbleGrumble c constr
R5395:5400 Poly MumbleGrumble mumble ind
R5452:5452 Poly MumbleGrumble c constr
R5460:5472 Poly <> <> mod
def 5749:5755 <> repeat'
R5769:5772 Poly <> list ind
R5774:5774 Poly <> X var
R5787:5791 Poly <> count var
R5814:5816 Poly <> nil constr
R5818:5818 Poly <> X var
R5824:5824 Coq.Init.Datatypes <> S constr
R5836:5839 Poly <> cons constr
R5846:5852 Poly <> repeat' def
R5856:5856 Poly <> x var
R5854:5854 Poly <> X var
R5843:5843 Poly <> x var
R5841:5841 Poly <> X var
R5956:5962 Poly <> repeat' def
R6018:6023 Poly <> repeat def
def 8572:8579 <> repeat''
R8593:8596 Poly <> list ind
R8598:8598 Poly <> X var
R8611:8615 Poly <> count var
R8638:8640 Poly <> nil constr
R8648:8648 Coq.Init.Datatypes <> S constr
R8660:8663 Poly <> cons constr
R8670:8677 Poly <> repeat'' def
R8681:8681 Poly <> x var
R8667:8667 Poly <> x var
def 9007:9013 <> list123
R9020:9023 Poly <> cons constr
R9032:9035 Poly <> cons constr
R9044:9047 Poly <> cons constr
R9056:9058 Poly <> nil constr
R9060:9062 Coq.Init.Datatypes <> nat ind
R9049:9051 Coq.Init.Datatypes <> nat ind
R9037:9039 Coq.Init.Datatypes <> nat ind
R9025:9027 Coq.Init.Datatypes <> nat ind
def 9136:9143 <> list123'
R9150:9153 Poly <> cons constr
R9160:9163 Poly <> cons constr
R9170:9173 Poly <> cons constr
R9180:9182 Poly <> nil constr
R9799:9801 Poly <> nil constr
R9799:9801 Poly <> nil constr
R9818:9821 Poly <> cons constr
R9818:9821 Poly <> cons constr
R9842:9847 Poly <> repeat def
R9842:9847 Poly <> repeat def
def 9934:9942 <> list123''
R9947:9950 Poly <> cons constr
R9955:9958 Poly <> cons constr
R9963:9966 Poly <> cons constr
R9970:9972 Poly <> nil constr
def 10144:10152 <> repeat'''
R10170:10170 Poly <> X var
R10182:10184 Coq.Init.Datatypes <> nat ind
R10189:10192 Poly <> list ind
R10194:10194 Poly <> X var
R10207:10211 Poly <> count var
R10234:10236 Poly <> nil constr
R10242:10242 Coq.Init.Datatypes <> S constr
R10254:10257 Poly <> cons constr
R10262:10270 Poly <> repeat''' def
R10272:10272 Poly <> x var
R10259:10259 Poly <> x var
ind 10875:10879 <> list'
constr 10904:10907 <> nil'
constr 10921:10925 <> cons'
R10911:10915 Poly <> list' ind
R10943:10947 Poly <> list' ind
R10934:10938 Poly <> list' ind
def 11383:11385 <> app
R11407:11410 Poly <> list ind
R11412:11412 Poly <> X var
R11431:11434 Poly <> list ind
R11436:11436 Poly <> X var
R11450:11451 Poly <> l1 var
R11462:11464 Poly <> nil constr
R11474:11475 Poly <> l2 var
R11481:11484 Poly <> cons constr
R11493:11496 Poly <> cons constr
R11501:11503 Poly <> app def
R11507:11508 Poly <> l2 var
def 11528:11530 <> rev
R11544:11547 Poly <> list ind
R11549:11549 Poly <> X var
R11554:11557 Poly <> list ind
R11559:11559 Poly <> X var
R11572:11572 Poly <> l var
R11583:11585 Poly <> nil constr
R11595:11597 Poly <> nil constr
R11603:11606 Poly <> cons constr
R11615:11617 Poly <> app def
R11628:11631 Poly <> cons constr
R11635:11637 Poly <> nil constr
R11620:11622 Poly <> rev def
def 11657:11662 <> length
R11680:11683 Poly <> list ind
R11685:11685 Poly <> X var
R11690:11692 Coq.Init.Datatypes <> nat ind
R11705:11705 Poly <> l var
R11716:11718 Poly <> nil constr
R11729:11732 Poly <> cons constr
R11742:11742 Coq.Init.Datatypes <> S constr
R11745:11750 Poly <> length def
def 11772:11780 <> test_rev1
R11811:11814 Coq.Init.Logic <> :type_scope:x_'='_x not
R11834:11834 Coq.Init.Logic <> :type_scope:x_'='_x not
R11786:11788 Poly <> rev def
R11791:11794 Poly <> cons constr
R11799:11802 Poly <> cons constr
R11806:11808 Poly <> nil constr
R11815:11818 Poly <> cons constr
R11823:11826 Poly <> cons constr
R11830:11832 Poly <> nil constr
def 11872:11880 <> test_rev2
R11904:11906 Coq.Init.Logic <> :type_scope:x_'='_x not
R11885:11887 Poly <> rev def
R11890:11893 Poly <> cons constr
R11900:11902 Poly <> nil constr
R11895:11898 Basics <> true constr
R11907:11910 Poly <> cons constr
R11917:11919 Poly <> nil constr
R11912:11915 Basics <> true constr
def 11957:11968 <> test_length1
R12008:12010 Coq.Init.Logic <> :type_scope:x_'='_x not
R11971:11976 Poly <> length def
R11979:11982 Poly <> cons constr
R11987:11990 Poly <> cons constr
R11995:11998 Poly <> cons constr
R12002:12004 Poly <> nil constr
def 12364:12368 <> mynil
R12373:12375 Poly <> nil constr
def 12942:12946 <> mynil
R12950:12953 Poly <> list ind
R12955:12957 Coq.Init.Datatypes <> nat ind
R12962:12964 Poly <> nil constr
R13093:13095 Poly <> nil constr
def 13110:13115 <> mynil'
R13121:13123 Poly <> nil constr
R13125:13127 Coq.Init.Datatypes <> nat ind
R13409:13412 Poly <> cons constr
not 13396 <> ::x_'::'_x
R13494:13496 Poly <> nil constr
not 13485 <> ::'['_']'
R13529:13532 Poly <> cons constr
R13540:13543 Poly <> cons constr
R13547:13548 Poly <> ::'['_']' not
not 13508 <> ::'['_x_';'_'..'_';'_x_']'
R13578:13580 Poly <> app def
not 13565 <> ::x_'++'_x
def 13713:13722 <> list123'''
R13727:13727 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13729:13730 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13732:13733 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R13735:13735 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 14043:14051 <> app_nil_r
R14081:14084 Poly <> list ind
R14086:14086 Poly <> X var
R14098:14100 Coq.Init.Logic <> :type_scope:x_'='_x not
R14092:14095 Poly <> ::x_'++'_x not
R14091:14091 Poly <> l var
R14096:14097 Poly <> ::'['_']' not
R14101:14101 Poly <> l var
prf 14205:14213 <> app_assoc
R14233:14236 Poly <> list ind
R14238:14238 Poly <> A var
R14255:14257 Coq.Init.Logic <> :type_scope:x_'='_x not
R14245:14248 Poly <> ::x_'++'_x not
R14244:14244 Poly <> l var
R14250:14253 Poly <> ::x_'++'_x not
R14249:14249 Poly <> m var
R14254:14254 Poly <> n var
R14258:14258 Poly <> ::x_'++'_x not
R14265:14269 Poly <> ::x_'++'_x not
R14260:14263 Poly <> ::x_'++'_x not
R14259:14259 Poly <> l var
R14264:14264 Poly <> m var
R14270:14270 Poly <> n var
prf 14372:14381 <> app_length
R14410:14413 Poly <> list ind
R14415:14415 Poly <> X var
R14438:14440 Coq.Init.Logic <> :type_scope:x_'='_x not
R14421:14426 Poly <> length def
R14431:14434 Poly <> ::x_'++'_x not
R14429:14430 Poly <> l1 var
R14435:14436 Poly <> l2 var
R14450:14452 Basics <> :nat_scope:x_'+'_x not
R14441:14446 Poly <> length def
R14448:14449 Poly <> l1 var
R14453:14458 Poly <> length def
R14460:14461 Poly <> l2 var
prf 14686:14698 <> rev_app_distr
R14719:14722 Poly <> list ind
R14724:14724 Poly <> X var
R14744:14746 Coq.Init.Logic <> :type_scope:x_'='_x not
R14730:14732 Poly <> rev def
R14737:14740 Poly <> ::x_'++'_x not
R14735:14736 Poly <> l1 var
R14741:14742 Poly <> l2 var
R14753:14756 Poly <> ::x_'++'_x not
R14747:14749 Poly <> rev def
R14751:14752 Poly <> l2 var
R14757:14759 Poly <> rev def
R14761:14762 Poly <> l1 var
R14818:14826 Poly <> app_nil_r thm
R14818:14826 Poly <> app_nil_r thm
R14881:14889 Poly <> app_assoc thm
R14881:14889 Poly <> app_assoc thm
prf 14919:14932 <> rev_involutive
R14964:14967 Poly <> list ind
R14969:14969 Poly <> X var
R14985:14987 Coq.Init.Logic <> :type_scope:x_'='_x not
R14974:14976 Poly <> rev def
R14979:14981 Poly <> rev def
R14983:14983 Poly <> l var
R14988:14988 Poly <> l var
R15060:15072 Poly <> rev_app_distr thm
R15060:15072 Poly <> rev_app_distr thm
ind 15412:15415 <> prod
constr 15442:15445 <> pair
R15459:15462 Poly <> prod ind
R15480:15483 Poly <> pair constr
R15480:15483 Poly <> pair constr
R15630:15633 Poly <> pair constr
not 15614 <> ::'('_x_','_x_')'
R15769:15772 Poly <> prod ind
not 15757 <> :type_scope:x_'*'_x
def 16371:16373 <> fst
R16394:16396 Poly <> :type_scope:x_'*'_x not
R16393:16393 Poly <> X var
R16397:16397 Poly <> Y var
R16402:16402 Poly <> X var
R16415:16415 Poly <> p var
R16426:16426 Poly <> ::'('_x_','_x_')' not
R16428:16429 Poly <> ::'('_x_','_x_')' not
R16431:16431 Poly <> ::'('_x_','_x_')' not
def 16457:16459 <> snd
R16480:16482 Poly <> :type_scope:x_'*'_x not
R16479:16479 Poly <> X var
R16483:16483 Poly <> Y var
R16488:16488 Poly <> Y var
R16501:16501 Poly <> p var
R16512:16512 Poly <> ::'('_x_','_x_')' not
R16514:16515 Poly <> ::'('_x_','_x_')' not
R16517:16517 Poly <> ::'('_x_','_x_')' not
def 16764:16770 <> combine
R16791:16794 Poly <> list ind
R16796:16796 Poly <> X var
R16805:16808 Poly <> list ind
R16810:16810 Poly <> Y var
R16826:16829 Poly <> list ind
R16833:16833 Poly <> :type_scope:x_'*'_x not
R16832:16832 Poly <> X var
R16834:16834 Poly <> Y var
R16852:16853 Poly <> ly var
R16848:16849 Poly <> lx var
R16864:16865 Poly <> ::'['_']' not
R16873:16874 Poly <> ::'['_']' not
R16883:16884 Poly <> ::'['_']' not
R16889:16890 Poly <> ::'['_']' not
R16897:16900 Poly <> ::x_'::'_x not
R16906:16909 Poly <> ::x_'::'_x not
R16922:16926 Poly <> ::x_'::'_x not
R16940:16940 Poly <> ::x_'::'_x not
R16916:16916 Poly <> ::'('_x_','_x_')' not
R16918:16919 Poly <> ::'('_x_','_x_')' not
R16921:16921 Poly <> ::'('_x_','_x_')' not
R16927:16933 Poly <> combine def
R17287:17293 Poly <> combine def
R17301:17301 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17307:17307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17313:17313 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17318:17318 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17323:17323 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17319:17322 Basics <> true constr
R17314:17317 Basics <> true constr
R17308:17312 Basics <> false constr
R17302:17306 Basics <> false constr
R17295:17295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17297:17297 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17299:17299 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17333:17339 Poly <> combine def
def 17701:17705 <> split
R17725:17728 Poly <> list ind
R17732:17732 Poly <> :type_scope:x_'*'_x not
R17731:17731 Poly <> X var
R17733:17733 Poly <> Y var
R17754:17754 Poly <> :type_scope:x_'*'_x not
R17761:17765 Poly <> :type_scope:x_'*'_x not
R17772:17772 Poly <> :type_scope:x_'*'_x not
R17755:17758 Poly <> list ind
R17760:17760 Poly <> X var
R17766:17769 Poly <> list ind
R17771:17771 Poly <> Y var
R17785:17785 Poly <> l var
R17796:17797 Poly <> ::'['_']' not
R17802:17802 Poly <> ::'('_x_','_x_')' not
R17805:17805 Poly <> ::'('_x_','_x_')' not
R17808:17808 Poly <> ::'('_x_','_x_')' not
R17803:17804 Poly <> ::'['_']' not
R17806:17807 Poly <> ::'['_']' not
R17819:17822 Poly <> ::x_'::'_x not
R17814:17814 Poly <> ::'('_x_','_x_')' not
R17816:17816 Poly <> ::'('_x_','_x_')' not
R17818:17818 Poly <> ::'('_x_','_x_')' not
R17828:17828 Poly <> ::'('_x_','_x_')' not
R17847:17848 Poly <> ::'('_x_','_x_')' not
R17866:17866 Poly <> ::'('_x_','_x_')' not
R17830:17833 Poly <> ::x_'::'_x not
R17834:17836 Poly <> fst def
R17839:17843 Poly <> split def
R17850:17853 Poly <> ::x_'::'_x not
R17854:17856 Poly <> snd def
R17858:17862 Poly <> split def
def 17885:17894 <> test_split
R17926:17928 Coq.Init.Logic <> :type_scope:x_'='_x not
R17899:17903 Poly <> split def
R17905:17905 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17915:17915 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17925:17925 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17916:17916 Poly <> ::'('_x_','_x_')' not
R17918:17918 Poly <> ::'('_x_','_x_')' not
R17924:17924 Poly <> ::'('_x_','_x_')' not
R17919:17923 Basics <> false constr
R17906:17906 Poly <> ::'('_x_','_x_')' not
R17908:17908 Poly <> ::'('_x_','_x_')' not
R17914:17914 Poly <> ::'('_x_','_x_')' not
R17909:17913 Basics <> false constr
R17929:17929 Poly <> ::'('_x_','_x_')' not
R17935:17935 Poly <> ::'('_x_','_x_')' not
R17949:17949 Poly <> ::'('_x_','_x_')' not
R17930:17930 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17932:17932 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17934:17934 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17936:17936 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17942:17942 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17948:17948 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R17943:17947 Basics <> false constr
R17937:17941 Basics <> false constr
ind 18236:18241 <> option
constr 18266:18269 <> Some
constr 18291:18294 <> None
R18278:18283 Poly <> option ind
R18298:18303 Poly <> option ind
R18319:18322 Poly <> Some constr
R18319:18322 Poly <> Some constr
R18341:18344 Poly <> None constr
R18341:18344 Poly <> None constr
def 18458:18466 <> nth_error
R18484:18487 Poly <> list ind
R18489:18489 Poly <> X var
R18497:18499 Coq.Init.Datatypes <> nat ind
R18523:18528 Poly <> option ind
R18530:18530 Poly <> X var
R18543:18543 Poly <> l var
R18554:18555 Poly <> ::'['_']' not
R18560:18563 Poly <> None constr
R18570:18573 Poly <> ::x_'::'_x not
R18583:18589 Basics <> beq_nat def
R18593:18593 Coq.Init.Datatypes <> O constr
R18591:18591 Poly <> n var
R18612:18620 Poly <> nth_error def
R18626:18629 Coq.Init.Peano <> pred def
R18631:18631 Poly <> n var
R18600:18603 Poly <> Some constr
def 18650:18664 <> test_nth_error1
R18689:18691 Coq.Init.Logic <> :type_scope:x_'='_x not
R18668:18676 Poly <> nth_error def
R18678:18678 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18680:18680 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18682:18682 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18684:18684 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18686:18686 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18692:18695 Poly <> Some constr
def 18733:18747 <> test_nth_error2
R18772:18774 Coq.Init.Logic <> :type_scope:x_'='_x not
R18751:18759 Poly <> nth_error def
R18761:18761 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18765:18765 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18769:18769 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18766:18766 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18768:18768 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18762:18762 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18764:18764 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18775:18778 Poly <> Some constr
R18780:18780 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18782:18782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 18818:18832 <> test_nth_error3
R18854:18856 Coq.Init.Logic <> :type_scope:x_'='_x not
R18836:18844 Poly <> nth_error def
R18846:18846 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18851:18851 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R18847:18850 Basics <> true constr
R18857:18860 Poly <> None constr
def 19116:19123 <> hd_error
R19141:19144 Poly <> list ind
R19146:19146 Poly <> X var
R19151:19156 Poly <> option ind
R19158:19158 Poly <> X var
R19357:19364 Poly <> hd_error prfax
def 19376:19389 <> test_hd_error1
R19407:19409 Coq.Init.Logic <> :type_scope:x_'='_x not
R19393:19400 Poly <> hd_error prfax
R19402:19402 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19404:19404 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19406:19406 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19410:19413 Poly <> Some constr
def 19456:19469 <> test_hd_error2
R19492:19495 Coq.Init.Logic <> :type_scope:x_'='_x not
R19473:19480 Poly <> hd_error prfax
R19483:19483 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19487:19487 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19491:19491 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19488:19488 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19490:19490 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19484:19484 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19486:19486 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19496:19499 Poly <> Some constr
R19501:19501 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R19503:19503 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 20195:20204 <> doit3times
R20221:20221 Poly <> X var
R20218:20218 Poly <> X var
R20227:20227 Poly <> X var
R20232:20232 Poly <> X var
R20239:20239 Poly <> f var
R20242:20242 Poly <> f var
R20245:20245 Poly <> f var
R20247:20247 Poly <> n var
R20406:20415 Poly <> doit3times def
def 20487:20501 <> test_doit3times
R20525:20527 Coq.Init.Logic <> :type_scope:x_'='_x not
R20504:20513 Poly <> doit3times def
R20515:20522 Basics <> minustwo def
def 20566:20581 <> test_doit3times'
R20604:20606 Coq.Init.Logic <> :type_scope:x_'='_x not
R20584:20593 Poly <> doit3times def
R20600:20603 Basics <> true constr
R20595:20598 Basics <> negb def
R20607:20611 Basics <> false constr
def 21002:21007 <> filter
R21028:21031 Basics <> bool ind
R21025:21025 Poly <> X var
R21037:21040 Poly <> list ind
R21042:21042 Poly <> X var
R21064:21067 Poly <> list ind
R21069:21069 Poly <> X var
R21083:21083 Poly <> l var
R21094:21095 Poly <> ::'['_']' not
R21104:21105 Poly <> ::'['_']' not
R21112:21115 Poly <> ::x_'::'_x not
R21124:21127 Poly <> test var
R21192:21197 Poly <> filter def
R21199:21202 Poly <> test var
R21137:21141 Poly <> ::x_'::'_x not
R21155:21155 Poly <> ::x_'::'_x not
R21142:21147 Poly <> filter def
R21149:21152 Poly <> test var
def 21383:21394 <> test_filter1
R21419:21421 Coq.Init.Logic <> :type_scope:x_'='_x not
R21397:21402 Poly <> filter def
R21410:21410 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21412:21412 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21414:21414 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21416:21416 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21418:21418 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21404:21408 Basics <> evenb def
R21422:21422 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21424:21424 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21426:21426 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21467:21477 <> length_is_1
R21495:21498 Poly <> list ind
R21500:21500 Poly <> X var
R21505:21508 Basics <> bool ind
R21515:21521 Basics <> beq_nat def
R21524:21529 Poly <> length def
R21531:21531 Poly <> l var
def 21546:21557 <> test_filter2
R21632:21636 Coq.Init.Logic <> :type_scope:x_'='_x not
R21564:21569 Poly <> filter def
R21594:21595 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21602:21603 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21607:21608 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21612:21613 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21621:21622 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21625:21626 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21630:21631 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21627:21627 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21629:21629 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21623:21624 Poly <> ::'['_']' not
R21614:21614 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21616:21616 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21618:21618 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21620:21620 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21609:21609 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21611:21611 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21604:21604 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21606:21606 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21596:21596 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21598:21599 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21601:21601 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21571:21581 Poly <> length_is_1 def
R21637:21638 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21642:21643 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21647:21648 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21652:21653 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21649:21649 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21651:21651 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21644:21644 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21646:21646 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21639:21639 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21641:21641 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21812:21827 <> countoddmembers'
R21832:21835 Poly <> list ind
R21837:21839 Coq.Init.Datatypes <> nat ind
R21844:21846 Coq.Init.Datatypes <> nat ind
R21853:21858 Poly <> length def
R21861:21866 Poly <> filter def
R21873:21873 Poly <> l var
R21868:21871 Basics <> oddb def
def 21886:21907 <> test_countoddmembers'1
R21942:21944 Coq.Init.Logic <> :type_scope:x_'='_x not
R21912:21927 Poly <> countoddmembers' def
R21929:21929 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21931:21931 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21933:21933 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21935:21935 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21937:21937 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21939:21939 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R21941:21941 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 21982:22003 <> test_countoddmembers'2
R22032:22034 Coq.Init.Logic <> :type_scope:x_'='_x not
R22008:22023 Poly <> countoddmembers' def
R22025:22025 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22027:22027 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22029:22029 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R22031:22031 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 22072:22093 <> test_countoddmembers'3
R22118:22120 Coq.Init.Logic <> :type_scope:x_'='_x not
R22098:22113 Poly <> countoddmembers' def
R22115:22117 Poly <> nil constr
def 22899:22912 <> test_anon_fun'
R22946:22948 Coq.Init.Logic <> :type_scope:x_'='_x not
R22917:22926 Poly <> doit3times def
R22939:22941 Basics <> :nat_scope:x_'*'_x not
R22938:22938 Poly <> n var
R22942:22942 Poly <> n var
def 23189:23201 <> test_filter2'
R23296:23300 Coq.Init.Logic <> :type_scope:x_'='_x not
R23208:23213 Poly <> filter def
R23258:23259 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23266:23267 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23271:23272 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23276:23277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23285:23286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23289:23290 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23294:23295 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23291:23291 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23293:23293 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23287:23288 Poly <> ::'['_']' not
R23278:23278 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23280:23280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23282:23282 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23284:23284 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23273:23273 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23275:23275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23268:23268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23270:23270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23260:23260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23262:23263 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23265:23265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23225:23231 Basics <> beq_nat def
R23234:23239 Poly <> length def
R23241:23241 Poly <> l var
R23301:23302 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23306:23307 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23311:23312 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23316:23317 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23313:23313 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23315:23315 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23308:23308 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23310:23310 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23303:23303 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23305:23305 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23619:23633 <> filter_even_gt7
R23640:23643 Poly <> list ind
R23645:23647 Coq.Init.Datatypes <> nat ind
R23652:23655 Poly <> list ind
R23657:23659 Coq.Init.Datatypes <> nat ind
def 23739:23760 <> test_filter_even_gt7_1
R23801:23803 Coq.Init.Logic <> :type_scope:x_'='_x not
R23766:23780 Poly <> filter_even_gt7 prfax
R23782:23782 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23784:23784 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23786:23786 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23788:23788 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23790:23790 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23793:23793 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23795:23795 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23798:23798 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23800:23800 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23804:23804 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23807:23807 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23810:23810 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23812:23812 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 23854:23875 <> test_filter_even_gt7_2
R23911:23913 Coq.Init.Logic <> :type_scope:x_'='_x not
R23881:23895 Poly <> filter_even_gt7 prfax
R23897:23897 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23899:23899 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23901:23901 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23903:23903 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23906:23906 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23910:23910 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R23914:23915 Poly <> ::'['_']' not
def 24579:24587 <> partition
R24634:24637 Basics <> bool ind
R24629:24629 Poly <> X var
R24666:24669 Poly <> list ind
R24671:24671 Poly <> X var
R24701:24703 Poly <> :type_scope:x_'*'_x not
R24695:24698 Poly <> list ind
R24700:24700 Poly <> X var
R24704:24707 Poly <> list ind
R24709:24709 Poly <> X var
def 24789:24803 <> test_partition1
R24832:24834 Coq.Init.Logic <> :type_scope:x_'='_x not
R24806:24814 Poly <> partition prfax
R24821:24821 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24823:24823 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24825:24825 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24827:24827 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24829:24829 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24831:24831 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24816:24819 Basics <> oddb def
R24835:24835 Poly <> ::'('_x_','_x_')' not
R24843:24844 Poly <> ::'('_x_','_x_')' not
R24850:24850 Poly <> ::'('_x_','_x_')' not
R24836:24836 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24838:24838 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24840:24840 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24842:24842 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24845:24845 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24847:24847 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24849:24849 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 24890:24904 <> test_partition2
R24941:24943 Coq.Init.Logic <> :type_scope:x_'='_x not
R24907:24915 Poly <> partition prfax
R24934:24934 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24936:24936 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24938:24938 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24940:24940 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24927:24931 Basics <> false constr
R24944:24944 Poly <> ::'('_x_','_x_')' not
R24947:24948 Poly <> ::'('_x_','_x_')' not
R24956:24956 Poly <> ::'('_x_','_x_')' not
R24945:24946 Poly <> ::'['_']' not
R24949:24949 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24951:24951 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24953:24953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R24955:24955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25156:25158 <> map
R25177:25177 Poly <> Y var
R25174:25174 Poly <> X var
R25183:25186 Poly <> list ind
R25188:25188 Poly <> X var
R25194:25197 Poly <> list ind
R25199:25199 Poly <> Y var
R25213:25213 Poly <> l var
R25224:25225 Poly <> ::'['_']' not
R25234:25235 Poly <> ::'['_']' not
R25242:25245 Poly <> ::x_'::'_x not
R25251:25251 Poly <> ::x_'::'_x not
R25255:25260 Poly <> ::x_'::'_x not
R25268:25268 Poly <> ::x_'::'_x not
R25252:25252 Poly <> f var
R25261:25263 Poly <> map def
R25265:25265 Poly <> f var
def 25485:25493 <> test_map1
R25527:25529 Coq.Init.Logic <> :type_scope:x_'='_x not
R25496:25498 Poly <> map def
R25520:25520 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25522:25522 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25524:25524 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25526:25526 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25510:25513 Coq.Init.Peano <> plus def
R25517:25517 Poly <> x var
R25530:25530 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25532:25532 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25534:25534 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25536:25536 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 25830:25838 <> test_map2
R25861:25863 Coq.Init.Logic <> :type_scope:x_'='_x not
R25843:25845 Poly <> map def
R25852:25852 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25854:25854 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25856:25856 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25858:25858 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25860:25860 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25847:25850 Basics <> oddb def
R25864:25864 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25870:25870 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25875:25875 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25881:25881 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25886:25886 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R25882:25885 Basics <> true constr
R25876:25880 Basics <> false constr
R25871:25874 Basics <> true constr
R25865:25869 Basics <> false constr
def 26075:26083 <> test_map3
R26131:26135 Coq.Init.Logic <> :type_scope:x_'='_x not
R26090:26092 Poly <> map def
R26122:26122 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26124:26124 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26126:26126 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26128:26128 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26130:26130 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26104:26104 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26112:26112 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26119:26119 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26113:26116 Basics <> oddb def
R26118:26118 Poly <> n var
R26105:26109 Basics <> evenb def
R26111:26111 Poly <> n var
R26136:26136 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26149:26149 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26162:26162 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26175:26175 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26188:26188 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26176:26176 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26182:26182 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26187:26187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26183:26186 Basics <> true constr
R26177:26181 Basics <> false constr
R26163:26163 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26168:26168 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26174:26174 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26169:26173 Basics <> false constr
R26164:26167 Basics <> true constr
R26150:26150 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26156:26156 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26161:26161 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26157:26160 Basics <> true constr
R26151:26155 Basics <> false constr
R26137:26137 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26142:26142 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26148:26148 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R26143:26147 Basics <> false constr
R26138:26141 Basics <> true constr
prf 26453:26459 <> map_rev
R26493:26493 Poly <> Y var
R26488:26488 Poly <> X var
R26501:26504 Poly <> list ind
R26506:26506 Poly <> X var
R26525:26527 Coq.Init.Logic <> :type_scope:x_'='_x not
R26512:26514 Poly <> map def
R26519:26521 Poly <> rev def
R26523:26523 Poly <> l var
R26516:26516 Poly <> f var
R26528:26530 Poly <> rev def
R26533:26535 Poly <> map def
R26539:26539 Poly <> l var
R26537:26537 Poly <> f var
def 27055:27062 <> flat_map
R27083:27086 Poly <> list ind
R27088:27088 Poly <> Y var
R27078:27078 Poly <> X var
R27094:27097 Poly <> list ind
R27099:27099 Poly <> X var
R27124:27127 Poly <> list ind
R27129:27129 Poly <> Y var
def 27210:27223 <> test_flat_map1
R27263:27267 Coq.Init.Logic <> :type_scope:x_'='_x not
R27228:27235 Poly <> flat_map prfax
R27256:27256 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27258:27258 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27260:27260 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27262:27262 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27247:27247 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27249:27249 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27251:27251 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27253:27253 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27252:27252 Poly <> n var
R27250:27250 Poly <> n var
R27248:27248 Poly <> n var
R27268:27268 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27270:27271 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27273:27274 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27276:27277 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27279:27280 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27282:27283 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27285:27286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27288:27289 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27291:27292 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R27294:27294 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 27499:27508 <> option_map
R27533:27533 Poly <> Y var
R27528:27528 Poly <> X var
R27542:27547 Poly <> option ind
R27549:27549 Poly <> X var
R27576:27581 Poly <> option ind
R27583:27583 Poly <> Y var
R27596:27597 Poly <> xo var
R27610:27613 Poly <> None constr
R27618:27621 Poly <> None constr
R27629:27632 Poly <> Some constr
R27639:27642 Poly <> Some constr
R27645:27645 Poly <> f var
def 28478:28481 <> fold
R28504:28504 Poly <> Y var
R28501:28501 Poly <> Y var
R28498:28498 Poly <> X var
R28510:28513 Poly <> list ind
R28515:28515 Poly <> X var
R28521:28521 Poly <> Y var
R28551:28551 Poly <> Y var
R28564:28564 Poly <> l var
R28575:28577 Poly <> nil constr
R28582:28582 Poly <> b var
R28589:28592 Poly <> ::x_'::'_x not
R28598:28598 Poly <> f var
R28603:28606 Poly <> fold def
R28612:28612 Poly <> b var
R28608:28608 Poly <> f var
R29087:29090 Poly <> fold def
R29092:29095 Basics <> andb def
def 29157:29169 <> fold_example1
R29196:29198 Coq.Init.Logic <> :type_scope:x_'='_x not
R29175:29178 Poly <> fold def
R29185:29185 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29187:29187 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29189:29189 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29191:29191 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29193:29193 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29180:29183 Coq.Init.Peano <> mult def
def 29237:29249 <> fold_example2
R29292:29294 Coq.Init.Logic <> :type_scope:x_'='_x not
R29255:29258 Poly <> fold def
R29288:29291 Basics <> true constr
R29265:29265 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29270:29270 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29275:29275 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29281:29281 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29286:29286 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29282:29285 Basics <> true constr
R29276:29280 Basics <> false constr
R29271:29274 Basics <> true constr
R29266:29269 Basics <> true constr
R29260:29263 Basics <> andb def
R29295:29299 Basics <> false constr
def 29336:29348 <> fold_example3
R29385:29387 Coq.Init.Logic <> :type_scope:x_'='_x not
R29354:29357 Poly <> fold def
R29383:29384 Poly <> ::'['_']' not
R29364:29364 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29368:29368 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29371:29371 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29377:29377 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29381:29381 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29378:29378 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29380:29380 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29372:29372 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29374:29374 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29376:29376 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29369:29370 Poly <> ::'['_']' not
R29365:29365 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29367:29367 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29359:29361 Poly <> app def
R29388:29388 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29390:29390 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29392:29392 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29394:29394 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R29396:29396 Poly <> ::'['_x_';'_'..'_';'_x_']' not
def 30313:30320 <> constfun
R30336:30336 Poly <> X var
R30346:30346 Poly <> X var
R30341:30343 Coq.Init.Datatypes <> nat ind
R30360:30362 Coq.Init.Datatypes <> nat ind
R30368:30368 Poly <> x var
def 30383:30387 <> ftrue
R30392:30399 Poly <> constfun def
R30401:30404 Basics <> true constr
def 30416:30432 <> constfun_example1
R30443:30445 Coq.Init.Logic <> :type_scope:x_'='_x not
R30436:30440 Poly <> ftrue def
R30446:30449 Basics <> true constr
def 30486:30502 <> constfun_example2
R30521:30523 Coq.Init.Logic <> :type_scope:x_'='_x not
R30507:30514 Poly <> constfun def
R30725:30728 Coq.Init.Peano <> plus def
def 31339:31343 <> plus3
R31348:31351 Coq.Init.Peano <> plus def
R31362:31366 Poly <> plus3 def
def 31378:31387 <> test_plus3
R31401:31403 Coq.Init.Logic <> :type_scope:x_'='_x not
R31394:31398 Poly <> plus3 def
def 31441:31451 <> test_plus3'
R31475:31477 Coq.Init.Logic <> :type_scope:x_'='_x not
R31457:31466 Poly <> doit3times def
R31468:31472 Poly <> plus3 def
def 31515:31526 <> test_plus3''
R31552:31554 Coq.Init.Logic <> :type_scope:x_'='_x not
R31531:31540 Poly <> doit3times def
R31543:31546 Coq.Init.Peano <> plus def
mod 31695:31703 <> Exercises
def 31905:31915 Exercises fold_length
R31933:31936 Poly Exercises list ind
R31938:31938 Poly <> X var
R31943:31945 Coq.Init.Datatypes <> nat ind
R31952:31955 Poly Exercises fold def
R31974:31974 Poly <> l var
R31969:31969 Coq.Init.Datatypes <> S constr
R31971:31971 Poly <> n var
def 31988:32004 Exercises test_fold_length1
R32027:32029 Coq.Init.Logic <> :type_scope:x_'='_x not
R32008:32018 Poly Exercises fold_length def
R32020:32020 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32022:32022 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32024:32024 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R32026:32026 Poly <> ::'['_x_';'_'..'_';'_x_']' not
prf 32115:32133 Exercises fold_length_correct
R32151:32154 Poly Exercises list ind
R32156:32156 Poly <> X var
R32175:32177 Coq.Init.Logic <> :type_scope:x_'='_x not
R32162:32172 Poly Exercises fold_length def
R32174:32174 Poly <> l var
R32178:32183 Poly Exercises length def
R32185:32185 Poly <> l var
def 32364:32371 Exercises fold_map
R32394:32394 Poly <> Y var
R32389:32389 Poly <> X var
R32402:32405 Poly Exercises list ind
R32407:32407 Poly <> X var
R32412:32415 Poly Exercises list ind
R32417:32417 Poly <> Y var
def 33428:33437 Exercises prod_curry
R33470:33470 Poly <> Z var
R33462:33464 Poly <> :type_scope:x_'*'_x not
R33461:33461 Poly <> X var
R33465:33465 Poly <> Y var
R33478:33478 Poly <> X var
R33486:33486 Poly <> Y var
R33491:33491 Poly <> Z var
R33496:33496 Poly <> f var
R33498:33498 Poly <> ::'('_x_','_x_')' not
R33500:33501 Poly <> ::'('_x_','_x_')' not
R33503:33503 Poly <> ::'('_x_','_x_')' not
R33499:33499 Poly <> x var
R33502:33502 Poly <> y var
def 33648:33659 Exercises prod_uncurry
R33693:33693 Poly <> Z var
R33688:33688 Poly <> Y var
R33683:33683 Poly <> X var
R33702:33704 Poly <> :type_scope:x_'*'_x not
R33701:33701 Poly <> X var
R33705:33705 Poly <> Y var
R33710:33710 Poly <> Z var
def 33918:33926 Exercises test_map2
R33960:33962 Coq.Init.Logic <> :type_scope:x_'='_x not
R33929:33931 Poly Exercises map def
R33953:33953 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33955:33955 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33957:33957 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33959:33959 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33943:33946 Coq.Init.Peano <> plus def
R33950:33950 Poly <> x var
R33963:33963 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33965:33965 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33967:33967 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R33969:33969 Poly <> ::'['_x_';'_'..'_';'_x_']' not
R34139:34148 Poly Exercises prod_curry def
R34158:34169 Poly Exercises prod_uncurry prfax
prf 34181:34193 Exercises uncurry_curry
R34258:34258 Poly <> Z var
R34253:34253 Poly <> Y var
R34248:34248 Poly <> X var
R34323:34325 Coq.Init.Logic <> :type_scope:x_'='_x not
R34292:34301 Poly Exercises prod_curry def
R34322:34322 Poly <> y var
R34320:34320 Poly <> x var
R34304:34315 Poly Exercises prod_uncurry prfax
R34317:34317 Poly <> f var
R34326:34326 Poly <> f var
R34330:34330 Poly <> y var
R34328:34328 Poly <> x var
prf 34380:34392 Exercises curry_uncurry
R34458:34458 Poly <> Z var
R34449:34451 Poly <> :type_scope:x_'*'_x not
R34448:34448 Poly <> X var
R34452:34452 Poly <> Y var
R34467:34469 Poly <> :type_scope:x_'*'_x not
R34466:34466 Poly <> X var
R34470:34470 Poly <> Y var
R34505:34507 Coq.Init.Logic <> :type_scope:x_'='_x not
R34476:34487 Poly Exercises prod_uncurry prfax
R34504:34504 Poly <> p var
R34490:34499 Poly Exercises prod_curry def
R34501:34501 Poly <> f var
R34508:34508 Poly <> f var
R34510:34510 Poly <> p var
mod 35385:35390 <> Exercises.Church
def 35404:35406 Exercises.Church nat
R35445:35445 Poly <> X var
R35440:35440 Poly <> X var
R35434:35434 Poly <> X var
R35429:35429 Poly <> X var
def 35601:35603 Exercises.Church one
R35607:35609 Poly Exercises.Church nat def
R35641:35641 Poly <> X var
R35636:35636 Poly <> X var
R35649:35649 Poly <> X var
R35655:35655 Poly <> f var
R35657:35657 Poly <> x var
def 35737:35739 Exercises.Church two
R35743:35745 Poly Exercises.Church nat def
R35777:35777 Poly <> X var
R35772:35772 Poly <> X var
R35785:35785 Poly <> X var
R35791:35791 Poly <> f var
R35794:35794 Poly <> f var
R35796:35796 Poly <> x var
def 35976:35979 Exercises.Church zero
R35983:35985 Poly Exercises.Church nat def
R36017:36017 Poly <> X var
R36012:36012 Poly <> X var
R36025:36025 Poly <> X var
R36031:36031 Poly <> x var
def 36306:36310 Exercises.Church three
R36314:36316 Poly Exercises.Church nat def
R36322:36331 Poly Exercises.Church doit3times def
def 36539:36542 Exercises.Church succ
R36549:36551 Poly Exercises.Church nat def
R36556:36558 Poly Exercises.Church nat def
def 36638:36643 Exercises.Church succ_1
R36656:36658 Coq.Init.Logic <> :type_scope:x_'='_x not
R36647:36650 Poly Exercises.Church succ prfax
R36652:36655 Poly Exercises.Church zero def
R36659:36661 Poly Exercises.Church one def
def 36709:36714 Exercises.Church succ_2
R36726:36728 Coq.Init.Logic <> :type_scope:x_'='_x not
R36718:36721 Poly Exercises.Church succ prfax
R36723:36725 Poly Exercises.Church one def
R36729:36731 Poly Exercises.Church two def
def 36779:36784 Exercises.Church succ_3
R36796:36798 Coq.Init.Logic <> :type_scope:x_'='_x not
R36788:36791 Poly Exercises.Church succ prfax
R36793:36795 Poly Exercises.Church two def
R36799:36803 Poly Exercises.Church three def
def 36895:36898 Exercises.Church plus
R36907:36909 Poly Exercises.Church nat def
R36914:36916 Poly Exercises.Church nat def
def 36996:37001 Exercises.Church plus_1
R37018:37020 Coq.Init.Logic <> :type_scope:x_'='_x not
R37005:37008 Poly Exercises.Church plus prfax
R37015:37017 Poly Exercises.Church one def
R37010:37013 Poly Exercises.Church zero def
R37021:37023 Poly Exercises.Church one def
def 37071:37076 Exercises.Church plus_2
R37094:37096 Coq.Init.Logic <> :type_scope:x_'='_x not
R37080:37083 Poly Exercises.Church plus prfax
R37089:37093 Poly Exercises.Church three def
R37085:37087 Poly Exercises.Church two def
R37097:37100 Poly Exercises.Church plus prfax
R37108:37110 Poly Exercises.Church two def
R37102:37106 Poly Exercises.Church three def
def 37158:37163 Exercises.Church plus_3
R37194:37196 Coq.Init.Logic <> :type_scope:x_'='_x not
R37169:37172 Poly Exercises.Church plus prfax
R37189:37193 Poly Exercises.Church three def
R37175:37178 Poly Exercises.Church plus prfax
R37184:37186 Poly Exercises.Church two def
R37180:37182 Poly Exercises.Church two def
R37197:37200 Poly Exercises.Church plus prfax
R37207:37210 Poly Exercises.Church plus prfax
R37218:37222 Poly Exercises.Church three def
R37212:37216 Poly Exercises.Church three def
R37202:37204 Poly Exercises.Church one def
def 37298:37301 Exercises.Church mult
R37310:37312 Poly Exercises.Church nat def
R37317:37319 Poly Exercises.Church nat def
def 37399:37404 Exercises.Church mult_1
R37420:37422 Coq.Init.Logic <> :type_scope:x_'='_x not
R37408:37411 Poly Exercises.Church mult prfax
R37417:37419 Poly Exercises.Church one def
R37413:37415 Poly Exercises.Church one def
R37423:37425 Poly Exercises.Church one def
def 37473:37478 Exercises.Church mult_2
R37510:37512 Coq.Init.Logic <> :type_scope:x_'='_x not
R37482:37485 Poly Exercises.Church mult prfax
R37493:37496 Poly Exercises.Church plus prfax
R37504:37508 Poly Exercises.Church three def
R37498:37502 Poly Exercises.Church three def
R37487:37490 Poly Exercises.Church zero def
R37513:37516 Poly Exercises.Church zero def
def 37564:37569 Exercises.Church mult_3
R37587:37589 Coq.Init.Logic <> :type_scope:x_'='_x not
R37573:37576 Poly Exercises.Church mult prfax
R37582:37586 Poly Exercises.Church three def
R37578:37580 Poly Exercises.Church two def
R37590:37593 Poly Exercises.Church plus prfax
R37601:37605 Poly Exercises.Church three def
R37595:37599 Poly Exercises.Church three def
def 37935:37937 Exercises.Church exp
R37946:37948 Poly Exercises.Church nat def
R37953:37955 Poly Exercises.Church nat def
def 38035:38039 Exercises.Church exp_1
R38054:38056 Coq.Init.Logic <> :type_scope:x_'='_x not
R38043:38045 Poly Exercises.Church exp prfax
R38051:38053 Poly Exercises.Church two def
R38047:38049 Poly Exercises.Church two def
R38057:38060 Poly Exercises.Church plus prfax
R38066:38068 Poly Exercises.Church two def
R38062:38064 Poly Exercises.Church two def
def 38116:38120 Exercises.Church exp_2
R38137:38139 Coq.Init.Logic <> :type_scope:x_'='_x not
R38124:38126 Poly Exercises.Church exp prfax
R38134:38136 Poly Exercises.Church two def
R38128:38132 Poly Exercises.Church three def
R38140:38143 Poly Exercises.Church plus prfax
R38171:38173 Poly Exercises.Church one def
R38146:38149 Poly Exercises.Church mult prfax
R38156:38159 Poly Exercises.Church mult prfax
R38165:38167 Poly Exercises.Church two def
R38161:38163 Poly Exercises.Church two def
R38151:38153 Poly Exercises.Church two def
def 38221:38225 Exercises.Church exp_3
R38243:38245 Coq.Init.Logic <> :type_scope:x_'='_x not
R38229:38231 Poly Exercises.Church exp prfax
R38239:38242 Poly Exercises.Church zero def
R38233:38237 Poly Exercises.Church three def
R38246:38248 Poly Exercises.Church one def
R38292:38297 Poly Church <> mod
R38315:38323 Poly <> <> mod
